{"ast":null,"code":"import _slicedToArray from\"/home/vg009/Downloads/tic-tac-toe-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./App.css\";import{useState,useEffect}from\"react\";import Square from\"./Components/Square\";import{Patterns}from\"./Patterns\";import swal from'sweetalert';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]),_useState2=_slicedToArray(_useState,2),board=_useState2[0],setBoard=_useState2[1];var _useState3=useState(\"O\"),_useState4=_slicedToArray(_useState3,2),player=_useState4[0],setPlayer=_useState4[1];var _useState5=useState({winner:\"none\",state:\"none\"}),_useState6=_slicedToArray(_useState5,2),result=_useState6[0],setResult=_useState6[1];useEffect(function(){checkWin();checkIfTie();if(player==\"X\"){setPlayer(\"O\");}else{setPlayer(\"X\");}},[board]);useEffect(function(){if(result.state!=\"none\"){swal(\"Game Finished! Winning Player: \".concat(result.winner));restartGame();}},[result]);var _chooseSquare=function chooseSquare(square){setBoard(board.map(function(val,idx){if(idx==square&&val==\"\"){return player;}return val;}));};var checkWin=function checkWin(){Patterns.forEach(function(currPattern){var firstPlayer=board[currPattern[0]];if(firstPlayer==\"\")return;var foundWinningPattern=true;currPattern.forEach(function(idx){if(board[idx]!=firstPlayer){foundWinningPattern=false;}});if(foundWinningPattern){setResult({winner:player,state:\"Won\"});}});};var checkIfTie=function checkIfTie(){var filled=true;board.forEach(function(square){if(square==\"\"){filled=false;}});if(filled){setResult({winner:\"No One\",state:\"Tie\"});}};var restartGame=function restartGame(){setBoard([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]);setPlayer(\"O\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"heading\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Tic-Tac-Toe\"}),\"Made by Vaibhav Goel\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Square,{val:board[0],chooseSquare:function chooseSquare(){_chooseSquare(0);}}),/*#__PURE__*/_jsx(Square,{val:board[1],chooseSquare:function chooseSquare(){_chooseSquare(1);}}),/*#__PURE__*/_jsx(Square,{val:board[2],chooseSquare:function chooseSquare(){_chooseSquare(2);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Square,{val:board[3],chooseSquare:function chooseSquare(){_chooseSquare(3);}}),/*#__PURE__*/_jsx(Square,{val:board[4],chooseSquare:function chooseSquare(){_chooseSquare(4);}}),/*#__PURE__*/_jsx(Square,{val:board[5],chooseSquare:function chooseSquare(){_chooseSquare(5);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Square,{val:board[6],chooseSquare:function chooseSquare(){_chooseSquare(6);}}),/*#__PURE__*/_jsx(Square,{val:board[7],chooseSquare:function chooseSquare(){_chooseSquare(7);}}),/*#__PURE__*/_jsx(Square,{val:board[8],chooseSquare:function chooseSquare(){_chooseSquare(8);}})]})]})]});}export default App;","map":{"version":3,"sources":["/home/vg009/Downloads/tic-tac-toe-react-main/src/App.js"],"names":["useState","useEffect","Square","Patterns","swal","App","board","setBoard","player","setPlayer","winner","state","result","setResult","checkWin","checkIfTie","restartGame","chooseSquare","square","map","val","idx","forEach","currPattern","firstPlayer","foundWinningPattern","filled"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Square from \"./Components/Square\";\nimport { Patterns } from \"./Patterns\";\nimport swal from 'sweetalert';\n\nfunction App() {\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"O\");\n  const [result, setResult] = useState({ winner: \"none\", state: \"none\" });\n\n  useEffect(() => {\n    checkWin();\n    checkIfTie();\n\n    if (player == \"X\") {\n      setPlayer(\"O\");\n    } else {\n      setPlayer(\"X\");\n    }\n  }, [board]);\n\n  useEffect(() => {\n    if (result.state != \"none\") {\n      swal(`Game Finished! Winning Player: ${result.winner}`);\n      restartGame();\n    }\n  }, [result]);\n\n  const chooseSquare = (square) => {\n    setBoard(\n      board.map((val, idx) => {\n        if (idx == square && val == \"\") {\n          return player;\n        }\n\n        return val;\n      })\n    );\n  };\n\n  const checkWin = () => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer == \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach((idx) => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({ winner: player, state: \"Won\" });\n      }\n    });\n  };\n\n  const checkIfTie = () => {\n    let filled = true;\n    board.forEach((square) => {\n      if (square == \"\") {\n        filled = false;\n      }\n    });\n\n    if (filled) {\n      setResult({ winner: \"No One\", state: \"Tie\" });\n    }\n  };\n\n  const restartGame = () => {\n    setBoard([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n    setPlayer(\"O\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"heading\">\n          <h1>Tic-Tac-Toe</h1>\n          Made by Vaibhav Goel \n      </div>\n      <div className=\"board\">\n        <div className=\"row\">\n          <Square\n            val={board[0]}\n            chooseSquare={() => {\n              chooseSquare(0);\n            }}\n          />\n          <Square\n            val={board[1]}\n            chooseSquare={() => {\n              chooseSquare(1);\n            }}\n          />\n          <Square\n            val={board[2]}\n            chooseSquare={() => {\n              chooseSquare(2);\n            }}\n          />\n        </div>\n        <div className=\"row\">\n          <Square\n            val={board[3]}\n            chooseSquare={() => {\n              chooseSquare(3);\n            }}\n          />\n          <Square\n            val={board[4]}\n            chooseSquare={() => {\n              chooseSquare(4);\n            }}\n          />\n          <Square\n            val={board[5]}\n            chooseSquare={() => {\n              chooseSquare(5);\n            }}\n          />\n        </div>\n        <div className=\"row\">\n          <Square\n            val={board[6]}\n            chooseSquare={() => {\n              chooseSquare(6);\n            }}\n          />\n          <Square\n            val={board[7]}\n            chooseSquare={() => {\n              chooseSquare(7);\n            }}\n          />\n          <Square\n            val={board[8]}\n            chooseSquare={() => {\n              chooseSquare(8);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}